pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws_access_key_id')
        AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
    }

    options {
        ansiColor('xterm')
    }

    stages {
        stage('Booting up the pipline') {
            steps {
                sh 'echo "Hello Shubham, ready for your deployment. Let\'s go"'
            }
        }
        stage('Deploy infra') {
            steps {
                dir('wearify-infra') {
                    echo 'Deploying your wearify app infrastructure...'
                    sh 'terraform init'
                    sh 'terraform apply --auto-approve'
                }
            }
        }
        stage('Setup k8s cluster') {
            steps{
            dir('wearify-infra') {
                    script {
                        env.WEARIFY_MASTER_IP_ADDR = sh(script: "terraform output -raw wearify_master_node_ipv4_addr", returnStdout: true).trim()
                        env.WEARIFY_KEY_PATH = sh(script: "terraform output -raw wearify_key_location", returnStdout: true).trim()
                        
                        def worker_ips_output = sh(script: "terraform output -json wearify_worker_nodes_ipv4_addr", returnStdout: true).trim()
                        def worker_ips = new groovy.json.JsonSlurper().parseText(worker_ips_output)
                        def worker_ip_list = worker_ips.collect { "\"$it\"" }.join(" ")

                        echo "Setting up Wearify Master node at IP: ${WEARIFY_MASTER_IP_ADDR}"

                        sh """
                        ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i ${WEARIFY_KEY_PATH} ubuntu@${WEARIFY_MASTER_IP_ADDR} ./master_node_setup.sh
                        """
                        
                        sh """
                        i=1
                        for worker_ip in ${worker_ip_list}; do
                            echo "Setting up Worker \$i at \$worker_ip"
                            ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i ${WEARIFY_KEY_PATH} ubuntu@${WEARIFY_MASTER_IP_ADDR} \\
                            bash -c \\"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i /home/ubuntu/.ssh/wearify_keypair.pem ubuntu@\${worker_ip} bash /home/ubuntu/worker_node_setup.sh \${i}\\"
                            i=\$((i+1))
                        done
                        """

                        sh """
                        sleep 20
                        echo "Waiting for cluster to be ready with all nodes..."
                        ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i ${WEARIFY_KEY_PATH} ubuntu@${WEARIFY_MASTER_IP_ADDR} kubectl get nodes
                        """
                    }
            }
            }
        }
    }
}