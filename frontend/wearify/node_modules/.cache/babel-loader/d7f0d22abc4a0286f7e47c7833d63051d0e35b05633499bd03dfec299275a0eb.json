{"ast":null,"code":"var _jsxFileName = \"/Users/sthapliyal/Desktop/Wearify/frontend/wearify/src/layouts/ChangePassword.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Form, useActionData, useNavigate } from \"react-router-dom\";\nimport { getCSRFToken } from \"../context/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  const actionData = useActionData();\n  const navigate = useNavigate();\n  if (actionData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-full flex-col justify-center px-6 py-12 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\",\n      children: [actionData && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-md text-${actionData.error ? \"red\" : \"green\"}-600 mb-4`,\n        children: actionData.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"space-y-6\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPass\",\n            className: \"block text-sm font-medium leading-6 text-gray-900\",\n            children: \"New password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"newPass\",\n              name: \"newPass\",\n              type: \"password\",\n              required: true,\n              className: \"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPass\",\n            className: \"block text-sm font-medium leading-6 text-gray-900\",\n            children: \"Confirm password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"confirmPass\",\n              name: \"confirmPass\",\n              type: \"password\",\n              required: true,\n              className: \"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\",\n            children: \"Change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n_s(ChangePassword, \"YNDRs+jqEyo50IzazjHr5ocC9v8=\", false, function () {\n  return [useActionData, useNavigate];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nexport async function action({\n  params,\n  request\n}) {\n  const resetTokenValue = params.resetToken;\n  const csrfToken = await getCSRFToken();\n  const formData = await request.formData();\n  const updatedPassword = formData.get(\"newPass\");\n  const confirmPassword = formData.get(\"confirmPass\");\n  const actionData = {};\n  if (updatedPassword !== confirmPassword) {\n    actionData.message = \"Entered passwords do not match!\";\n    actionData.error = true;\n    return actionData;\n  }\n  const resData = await fetch(`http://localhost:5000/auth/change-password/${resetTokenValue}`, {\n    method: request.method,\n    body: JSON.stringify({\n      updatedPassword\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRF-Token\": csrfToken\n    },\n    credentials: \"include\"\n  });\n  const data = await resData.json();\n  actionData.message = data.message;\n  if (!resData.ok) {\n    actionData.error = true;\n  }\n  return actionData;\n}\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","Form","useActionData","useNavigate","getCSRFToken","jsxDEV","_jsxDEV","ChangePassword","_s","actionData","navigate","className","children","error","message","fileName","_jsxFileName","lineNumber","columnNumber","method","htmlFor","id","name","type","required","_c","action","params","request","resetTokenValue","resetToken","csrfToken","formData","updatedPassword","get","confirmPassword","resData","fetch","body","JSON","stringify","headers","credentials","data","json","ok","$RefreshReg$"],"sources":["/Users/sthapliyal/Desktop/Wearify/frontend/wearify/src/layouts/ChangePassword.js"],"sourcesContent":["import React from \"react\";\nimport { Form, useActionData, useNavigate } from \"react-router-dom\";\nimport { getCSRFToken } from \"../context/auth\";\n\nconst ChangePassword = () => {\n  const actionData = useActionData();\n  const navigate = useNavigate();\n\n  if (actionData)\n    return (\n      <div className=\"flex min-h-full flex-col justify-center px-6 py-12 lg:px-8\">\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n          {actionData && (\n            <p\n              className={`text-md text-${\n                actionData.error ? \"red\" : \"green\"\n              }-600 mb-4`}\n            >\n              {actionData.message}\n            </p>\n          )}\n          <Form className=\"space-y-6\" method=\"POST\">\n            <div className=\"text-left\">\n              <label\n                htmlFor=\"newPass\"\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\n              >\n                New password\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"newPass\"\n                  name=\"newPass\"\n                  type=\"password\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n            <div className=\"text-left\">\n              <label\n                htmlFor=\"confirmPass\"\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\n              >\n                Confirm password\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"confirmPass\"\n                  name=\"confirmPass\"\n                  type=\"password\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n              >\n                Change password\n              </button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n};\n\nexport default ChangePassword;\n\nexport async function action({ params, request }) {\n  const resetTokenValue = params.resetToken;\n  const csrfToken = await getCSRFToken();\n  const formData = await request.formData();\n  const updatedPassword = formData.get(\"newPass\");\n  const confirmPassword = formData.get(\"confirmPass\");\n  const actionData = {};\n\n  if (updatedPassword !== confirmPassword) {\n    actionData.message = \"Entered passwords do not match!\";\n    actionData.error = true;\n    return actionData;\n  }\n\n  const resData = await fetch(\n    `http://localhost:5000/auth/change-password/${resetTokenValue}`,\n    {\n      method: request.method,\n      body: JSON.stringify({ updatedPassword }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-Token\": csrfToken,\n      },\n      credentials: \"include\",\n    }\n  );\n  const data = await resData.json();\n  actionData.message = data.message;\n\n  if (!resData.ok) {\n    actionData.error = true;\n  }\n  return actionData;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,aAAa,EAAEC,WAAW,QAAQ,kBAAkB;AACnE,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAClC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,IAAIM,UAAU,EACZ,oBACEH,OAAA;IAAKK,SAAS,EAAC,4DAA4D;IAAAC,QAAA,eACzEN,OAAA;MAAKK,SAAS,EAAC,wCAAwC;MAAAC,QAAA,GACpDH,UAAU,iBACTH,OAAA;QACEK,SAAS,EAAE,gBACTF,UAAU,CAACI,KAAK,GAAG,KAAK,GAAG,OAAO,WACxB;QAAAD,QAAA,EAEXH,UAAU,CAACK;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CACJ,eACDZ,OAAA,CAACL,IAAI;QAACU,SAAS,EAAC,WAAW;QAACQ,MAAM,EAAC,MAAM;QAAAP,QAAA,gBACvCN,OAAA;UAAKK,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBN,OAAA;YACEc,OAAO,EAAC,SAAS;YACjBT,SAAS,EAAC,mDAAmD;YAAAC,QAAA,EAC9D;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRZ,OAAA;YAAKK,SAAS,EAAC,MAAM;YAAAC,QAAA,eACnBN,OAAA;cACEe,EAAE,EAAC,SAAS;cACZC,IAAI,EAAC,SAAS;cACdC,IAAI,EAAC,UAAU;cACfC,QAAQ;cACRb,SAAS,EAAC;YAAuM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNZ,OAAA;UAAKK,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBN,OAAA;YACEc,OAAO,EAAC,aAAa;YACrBT,SAAS,EAAC,mDAAmD;YAAAC,QAAA,EAC9D;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRZ,OAAA;YAAKK,SAAS,EAAC,MAAM;YAAAC,QAAA,eACnBN,OAAA;cACEe,EAAE,EAAC,aAAa;cAChBC,IAAI,EAAC,aAAa;cAClBC,IAAI,EAAC,UAAU;cACfC,QAAQ;cACRb,SAAS,EAAC;YAAuM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENZ,OAAA;UAAAM,QAAA,eACEN,OAAA;YACEiB,IAAI,EAAC,QAAQ;YACbZ,SAAS,EAAC,wPAAwP;YAAAC,QAAA,EACnQ;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACV,EAAA,CAjEID,cAAc;EAAA,QACCL,aAAa,EACfC,WAAW;AAAA;AAAAsB,EAAA,GAFxBlB,cAAc;AAmEpB,eAAeA,cAAc;AAE7B,OAAO,eAAemB,MAAMA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAChD,MAAMC,eAAe,GAAGF,MAAM,CAACG,UAAU;EACzC,MAAMC,SAAS,GAAG,MAAM3B,YAAY,CAAC,CAAC;EACtC,MAAM4B,QAAQ,GAAG,MAAMJ,OAAO,CAACI,QAAQ,CAAC,CAAC;EACzC,MAAMC,eAAe,GAAGD,QAAQ,CAACE,GAAG,CAAC,SAAS,CAAC;EAC/C,MAAMC,eAAe,GAAGH,QAAQ,CAACE,GAAG,CAAC,aAAa,CAAC;EACnD,MAAMzB,UAAU,GAAG,CAAC,CAAC;EAErB,IAAIwB,eAAe,KAAKE,eAAe,EAAE;IACvC1B,UAAU,CAACK,OAAO,GAAG,iCAAiC;IACtDL,UAAU,CAACI,KAAK,GAAG,IAAI;IACvB,OAAOJ,UAAU;EACnB;EAEA,MAAM2B,OAAO,GAAG,MAAMC,KAAK,CACzB,8CAA8CR,eAAe,EAAE,EAC/D;IACEV,MAAM,EAAES,OAAO,CAACT,MAAM;IACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAgB,CAAC,CAAC;IACzCQ,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,cAAc,EAAEV;IAClB,CAAC;IACDW,WAAW,EAAE;EACf,CACF,CAAC;EACD,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAACQ,IAAI,CAAC,CAAC;EACjCnC,UAAU,CAACK,OAAO,GAAG6B,IAAI,CAAC7B,OAAO;EAEjC,IAAI,CAACsB,OAAO,CAACS,EAAE,EAAE;IACfpC,UAAU,CAACI,KAAK,GAAG,IAAI;EACzB;EACA,OAAOJ,UAAU;AACnB;AAAC,IAAAgB,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}