{"ast":null,"code":"var _jsxFileName = \"/Users/sthapliyal/Desktop/Wearify/frontend/wearify/src/context/auth.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport CustomError from \"../layouts/CustomError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  user: {\n    isLoggedIn: Boolean,\n    username: String,\n    roleAdmin: Boolean\n  },\n  login: () => {},\n  logout: () => {}\n});\nexport const AuthProvider = props => {\n  _s();\n  const storedUser = JSON.parse(sessionStorage.getItem(\"user\"));\n  const [userData, setUserData] = useState(storedUser ? storedUser : {\n    isLoggedIn: false,\n    username: \"\",\n    roleAdmin: false\n  });\n  const login = (username, isAdmin) => {\n    setUserData(() => ({\n      username: username,\n      isLoggedIn: true,\n      roleAdmin: isAdmin\n    }));\n  };\n  const logout = () => {\n    sessionStorage.removeItem(\"user\");\n    setUserData({\n      username: \"\",\n      isLoggedIn: false,\n      roleAdmin: false\n    });\n  };\n  const userContextValue = {\n    user: userData,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: userContextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Be/jEUc0qT0Jt9fJxVWVebi8z7Q=\");\n_c = AuthProvider;\nexport default AuthContext;\nexport async function getCSRFToken() {\n  const response = await fetch(\"http://localhost:5000/auth/csrfToken\", {\n    credentials: \"include\"\n  });\n  const tokenData = await response.json();\n  if (!response.ok) {\n    throw new CustomError(response.statusText);\n  }\n  return CSRFToken;\n}\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","CustomError","jsxDEV","_jsxDEV","AuthContext","createContext","user","isLoggedIn","Boolean","username","String","roleAdmin","login","logout","AuthProvider","props","_s","storedUser","JSON","parse","sessionStorage","getItem","userData","setUserData","isAdmin","removeItem","userContextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getCSRFToken","response","fetch","credentials","tokenData","json","ok","statusText","CSRFToken","$RefreshReg$"],"sources":["/Users/sthapliyal/Desktop/Wearify/frontend/wearify/src/context/auth.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport CustomError from \"../layouts/CustomError\";\n\nconst AuthContext = React.createContext({\n  user: { isLoggedIn: Boolean, username: String, roleAdmin: Boolean },\n  login: () => {},\n  logout: () => {},\n});\n\nexport const AuthProvider = (props) => {\n  const storedUser = JSON.parse(sessionStorage.getItem(\"user\"));\n  const [userData, setUserData] = useState(\n    storedUser\n      ? storedUser\n      : {\n          isLoggedIn: false,\n          username: \"\",\n          roleAdmin: false,\n        }\n  );\n\n  const login = (username, isAdmin) => {\n    setUserData(() => ({\n      username: username,\n      isLoggedIn: true,\n      roleAdmin: isAdmin,\n    }));\n  };\n\n  const logout = () => {\n    sessionStorage.removeItem(\"user\");\n    setUserData({\n      username: \"\",\n      isLoggedIn: false,\n      roleAdmin: false,\n    });\n  };\n\n  const userContextValue = {\n    user: userData,\n    login,\n    logout,\n  };\n  return (\n    <AuthContext.Provider value={userContextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n\nexport async function getCSRFToken() {\n  const response = await fetch(\"http://localhost:5000/auth/csrfToken\", {\n    credentials: \"include\",\n  });\n  const tokenData = await response.json();\n  if (!response.ok) {\n    throw new CustomError(response.statusText);\n  }\n  return CSRFToken;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAa,CAAC;EACtCC,IAAI,EAAE;IAAEC,UAAU,EAAEC,OAAO;IAAEC,QAAQ,EAAEC,MAAM;IAAEC,SAAS,EAAEH;EAAQ,CAAC;EACnEI,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CACtCiB,UAAU,GACNA,UAAU,GACV;IACEV,UAAU,EAAE,KAAK;IACjBE,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE;EACb,CACN,CAAC;EAED,MAAMC,KAAK,GAAGA,CAACH,QAAQ,EAAEe,OAAO,KAAK;IACnCD,WAAW,CAAC,OAAO;MACjBd,QAAQ,EAAEA,QAAQ;MAClBF,UAAU,EAAE,IAAI;MAChBI,SAAS,EAAEa;IACb,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMX,MAAM,GAAGA,CAAA,KAAM;IACnBO,cAAc,CAACK,UAAU,CAAC,MAAM,CAAC;IACjCF,WAAW,CAAC;MACVd,QAAQ,EAAE,EAAE;MACZF,UAAU,EAAE,KAAK;MACjBI,SAAS,EAAE;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMe,gBAAgB,GAAG;IACvBpB,IAAI,EAAEgB,QAAQ;IACdV,KAAK;IACLC;EACF,CAAC;EACD,oBACEV,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAEF,gBAAiB;IAAAG,QAAA,EAC3Cd,KAAK,CAACc;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACjB,EAAA,CAvCWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAyCzB,eAAeV,WAAW;AAE1B,OAAO,eAAe+B,YAAYA,CAAA,EAAG;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;IACnEC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACvC,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;IAChB,MAAM,IAAIxC,WAAW,CAACmC,QAAQ,CAACM,UAAU,CAAC;EAC5C;EACA,OAAOC,SAAS;AAClB;AAAC,IAAAT,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}